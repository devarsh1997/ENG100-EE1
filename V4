/* Created by Tim Jin
 * Simon Memory Game on Arduino
 */

// Constants
const int button1 = 2;          // 1st button controls Yellow LED 
const int button2 = 4;          // 2nd button controls Orange LED
const int button3 = 6;          // 3rd button controls Green LED
const int button4 = 8;          // 4th button controls Red LED
const int led1 = 3;             // Yellow LED
const int led2 = 5;             // Orange LED
const int led3 = 7;             // Green LED
const int led4 = 9;             // Red LED
const int speaker = 10;         // Speaker
const int tones[] = {1915, 1700, 1519, 1432, 1200, 2700, 3500};

//Variables
int buttonSeq[6];     // The sequence of the button pushed by user
int lightSeq[6];      // The sequence of LED generated by the computer randomly
int rando = 0;        // Initialize random integer between 0 and 3
int currentLevel = 0; // This variable must be 1 in order to go to the next level
int speedFactor = 5;  // Affecting the speed of the LED

void setup() {
  // Initialize inputs :
  randomSeed(analogRead(0));
  pinMode(button1, INPUT);
  pinMode(button2, INPUT);
  pinMode(button3, INPUT);
  pinMode(button4, INPUT);
  // Initialize outputs:
  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  pinMode(led3, OUTPUT);
  pinMode(led4, OUTPUT);
  // Initialize serial communication for debugging:
  // Serial.begin(9600);
}

void loop() {
  gameStart();
  while(1) {
    initiateLightSeq();
    //shows the user the current sequence
    for (int i = 0; i < 6; i++){  
      int currentPin = 0;     //initialize current pin
      int timeDelay = 5000 / speedFactor;
      currentPin = ((lightSeq[i] + 1) * 2) + 1;
      digitalWrite(currentPin, HIGH);
      playTone(tones[i],timeDelay);
      digitalWrite(currentPin, LOW);
      delay(timeDelay);
    }
    
    // i is the current position in the sequence
    for (int i = 0; i < 6; i++) {
      
      while(1){
        if (digitalRead(button1) == 0) {
          buttonSeq[i] = 0;
          break;
        } else if (digitalRead(button2) == 0) {
          buttonSeq[i] = 1;
          break;
        } else if (digitalRead(button3) == 0) {
          buttonSeq[i] = 2;
          break;
        } else if (digitalRead(button4) == 0) {
          buttonSeq[i] = 3;
          break;
        }
      }
      
      // Check button correctness
      if (buttonSeq[i] != lightSeq[i]){
        currentLevel = -1;
        break;
      } else {
        digitalWrite(((buttonSeq[i] + 1) * 2) + 1, HIGH);
        playTone(tones[i],500);
        digitalWrite(((buttonSeq[i] + 1) * 2) + 1, LOW);
        delay(500);
      }
    }

    if(currentLevel == -1){
      gameOver();
      break;
    } else if(currentLevel == 5) {
      gameWin();
      break;
    } else {
      currentLevel++;
      speedFactor++;
    }
  }
  gameWin();
}

void playTone(int tone, int duration) {
  for (long i = 0; i < duration * 1000L; i += tone * 2) {
    digitalWrite(speaker, HIGH);
    delayMicroseconds(tone);
    digitalWrite(speaker, LOW);
    delayMicroseconds(tone);
  }
}

void gameStart() {
  currentLevel = 0;     // Reset the current level
  speedFactor = 5;      // Reset speed factor
  playTone(tones[4],500);
  for (int i = 0; i < 1; i++) {
    digitalWrite(3,HIGH);
    delay(500);
    digitalWrite(3,LOW);
    digitalWrite(5,HIGH);
    delay(500);
    digitalWrite(5,LOW);
    digitalWrite(7,HIGH);
    delay(500);
    digitalWrite(7,LOW);
    digitalWrite(9,HIGH);
    delay(500);
    digitalWrite(9,LOW);
    delay(500);
  }
}

void gameWin() {
  playTone(tones[5],500);
  for (int i = 0; i < 3; i++) {
    digitalWrite(3,HIGH);
    digitalWrite(7,HIGH);
    delay(500);
    digitalWrite(3,LOW);
    digitalWrite(7,LOW);
    digitalWrite(5,HIGH);
    digitalWrite(9,HIGH);
    delay(500);
    digitalWrite(5,LOW);
    digitalWrite(9,LOW);
    delay(500);
  }
}

void gameOver() {
  playTone(tones[6],500);
  for (int i = 0; i < 3; i++) {
    digitalWrite(3,HIGH);
    digitalWrite(5,HIGH);
    digitalWrite(7,HIGH);
    digitalWrite(9,HIGH);
    delay(500);
    digitalWrite(3,LOW);
    digitalWrite(5,LOW);
    digitalWrite(7,LOW);
    digitalWrite(9,LOW);
    delay(500);
  }
}

void initiateLightSeq(){
  //initialize the LED sequence
  for(int i = 0; i < 6; i++) {
    buttonSeq[i] = 0;         // Clear the button sequence
    lightSeq[i] = 0;          // Clear the LED sequence
    long rand_num = random(1,200);
    if (rand_num <= 50)
      rando=0;
    else if (rand_num>50 && rand_num<=100)
      rando=1;
    else if (rand_num>100 && rand_num<=150)
      rando=2;
    else if (rand_num<=200)
      rando=3;
    lightSeq[i] = rando;      // Save the random LED sequence
  }
}
